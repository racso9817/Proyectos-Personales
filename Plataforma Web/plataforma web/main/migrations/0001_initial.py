# Generated by Django 2.2.5 on 2019-10-17 18:23

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_db_constraints.operations


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(error_messages={'invalid': 'Correo invalido'}, help_text='Correo Electrónico', max_length=254, validators=[django.core.validators.RegexValidator('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$', 'Ingrese un correo valido.', 'invalid')])),
                ('fecha_nacimiento', models.DateField(blank=True, error_messages={'invalid': 'Fecha invalida'}, help_text='Ingrese la fecha en formato mm/dd/yyyy.', null=True)),
                ('genero', models.IntegerField(blank=True, null=True)),
                ('direccion', models.CharField(blank=True, max_length=100, null=True)),
                ('cedula_ruc', models.CharField(help_text='Ingrese la cedula o ruc', max_length=13, unique=True, validators=[django.core.validators.RegexValidator('\\d\\d\\d\\d\\d\\d\\d\\d\\d\\d|\\d\\d\\d\\d\\d\\d\\d\\d\\d\\d\\d\\d\\d', 'Ingrese una cedula válida.', 'invalid')])),
                ('razon_soc', models.CharField(default='9999999999', max_length=50)),
                ('profile_pic', models.ImageField(default='defualt.jpg', upload_to='profile_pics')),
                ('is_cliente', models.BooleanField(default=False, help_text='Seleccione si desea ser socio comercial y es dueño de un negocio, sino deje en blanco.', verbose_name='Socio o usuario:')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Cliente',
            fields=[
                ('id_cliente', models.AutoField(primary_key=True, serialize=False)),
                ('plan', models.IntegerField(default=1)),
                ('cuser', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'cliente',
            },
        ),
        migrations.CreateModel(
            name='Genero',
            fields=[
                ('id_genero', models.AutoField(primary_key=True, serialize=False)),
                ('descripcion', models.CharField(blank=True, max_length=30, null=True)),
            ],
            options={
                'db_table': 'genero',
            },
        ),
        migrations.CreateModel(
            name='RolesClientes',
            fields=[
                ('id_rol', models.AutoField(primary_key=True, serialize=False)),
                ('descripcion', models.CharField(blank=True, max_length=15, null=True)),
            ],
            options={
                'db_table': 'roles_clientes',
            },
        ),
        migrations.CreateModel(
            name='Sucursal',
            fields=[
                ('id_local', models.AutoField(primary_key=True, serialize=False)),
                ('nombre', models.CharField(max_length=50)),
                ('direccion', models.CharField(max_length=150, unique=True)),
                ('correo', models.CharField(blank=True, max_length=150, null=True, unique=True)),
                ('imagenTkn', models.ImageField(default='defualt.jpg', upload_to='token_pics')),
                ('propietario', models.ForeignKey(db_column='propietario', on_delete=django.db.models.deletion.PROTECT, to='main.Cliente')),
            ],
            options={
                'db_table': 'sucursal',
            },
        ),
        migrations.CreateModel(
            name='SucursalCliente',
            fields=[
                ('id_cajero', models.AutoField(primary_key=True, serialize=False)),
                ('cliente', models.ForeignKey(db_column='cliente', on_delete=django.db.models.deletion.PROTECT, to='main.Cliente')),
                ('sucursal', models.ForeignKey(db_column='sucursal', on_delete=django.db.models.deletion.PROTECT, to='main.Sucursal')),
            ],
            options={
                'db_table': 'sucursal_cliente',
            },
        ),
        migrations.CreateModel(
            name='TipoTelefono',
            fields=[
                ('cod', models.AutoField(primary_key=True, serialize=False)),
                ('descripcion', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'tipo_telefono',
            },
        ),
        migrations.CreateModel(
            name='UsuarioFinal',
            fields=[
                ('id_usufinal', models.AutoField(primary_key=True, serialize=False)),
                ('cuser', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'usuario_final',
            },
        ),
        migrations.CreateModel(
            name='Token',
            fields=[
                ('id_token', models.AutoField(primary_key=True, serialize=False)),
                ('fecha', models.DateTimeField(blank=True, default=django.utils.timezone.now, editable=False)),
                ('cajero', models.ForeignKey(db_column='cajero', on_delete=django.db.models.deletion.PROTECT, to='main.SucursalCliente')),
                ('usuario', models.ForeignKey(db_column='usuario', on_delete=django.db.models.deletion.PROTECT, to='main.UsuarioFinal')),
            ],
            options={
                'db_table': 'token',
            },
        ),
        migrations.CreateModel(
            name='TelefonosUsusarios',
            fields=[
                ('id_telefono', models.AutoField(primary_key=True, serialize=False)),
                ('numero', models.CharField(max_length=14, unique=True)),
                ('tipo_telefono', models.ForeignKey(db_column='tipo_telefono', on_delete=django.db.models.deletion.PROTECT, to='main.TipoTelefono')),
                ('usuario', models.ForeignKey(db_column='usuario', on_delete=django.db.models.deletion.PROTECT, to='main.UsuarioFinal')),
            ],
            options={
                'db_table': 'telefonos_ususarios',
            },
        ),
        migrations.CreateModel(
            name='TelefonosSucursales',
            fields=[
                ('id_telefono', models.AutoField(primary_key=True, serialize=False)),
                ('numero', models.CharField(max_length=14, unique=True)),
                ('propietario', models.ForeignKey(db_column='propietario', on_delete=django.db.models.deletion.PROTECT, to='main.Sucursal')),
                ('tipo_telefono', models.ForeignKey(db_column='tipo_telefono', on_delete=django.db.models.deletion.PROTECT, to='main.TipoTelefono')),
            ],
            options={
                'db_table': 'telefonos_sucursales',
            },
        ),
        migrations.CreateModel(
            name='TelefonosClientes',
            fields=[
                ('id_telefono', models.AutoField(primary_key=True, serialize=False)),
                ('numero', models.CharField(max_length=14, unique=True)),
                ('propietario', models.ForeignKey(db_column='propietario', on_delete=django.db.models.deletion.PROTECT, to='main.Cliente')),
                ('tipo_telefono', models.ForeignKey(db_column='tipo_telefono', on_delete=django.db.models.deletion.PROTECT, to='main.TipoTelefono')),
            ],
            options={
                'db_table': 'telefonos_clientes',
            },
        ),
        migrations.CreateModel(
            name='Meta',
            fields=[
                ('id_meta', models.AutoField(primary_key=True, serialize=False)),
                ('nombre', models.CharField(max_length=50)),
                ('descripcion', models.CharField(blank=True, max_length=300, null=True)),
                ('tokens', models.IntegerField(default=1)),
                ('activa', models.IntegerField()),
                ('cliente', models.ForeignKey(db_column='cliente', on_delete=django.db.models.deletion.PROTECT, to='main.Cliente')),
            ],
            options={
                'db_table': 'meta',
            },
        ),
        migrations.AddField(
            model_name='cliente',
            name='rol',
            field=models.ForeignKey(db_column='rol', on_delete=django.db.models.deletion.PROTECT, to='main.RolesClientes'),
        ),
        migrations.CreateModel(
            name='Canje',
            fields=[
                ('id_canje', models.AutoField(primary_key=True, serialize=False)),
                ('fecha', models.DateTimeField(blank=True, default=django.utils.timezone.now, editable=False)),
                ('cajero', models.ForeignKey(db_column='cajero', on_delete=django.db.models.deletion.PROTECT, to='main.Cliente')),
                ('meta', models.ForeignKey(db_column='meta', on_delete=django.db.models.deletion.PROTECT, to='main.Meta')),
                ('sucursal', models.ForeignKey(db_column='sucursal', on_delete=django.db.models.deletion.PROTECT, to='main.Sucursal')),
                ('usuario', models.ForeignKey(db_column='usuario', on_delete=django.db.models.deletion.PROTECT, to='main.UsuarioFinal')),
            ],
            options={
                'db_table': 'canje',
            },
        ),
        migrations.CreateModel(
            name='Campana',
            fields=[
                ('id_campana', models.AutoField(primary_key=True, serialize=False)),
                ('nombre', models.CharField(max_length=30)),
                ('fechainicio', models.DateTimeField(blank=True, db_column='fechaInicio', default=django.utils.timezone.now)),
                ('duracion', models.IntegerField(default=1)),
                ('target', models.CharField(blank=True, max_length=300, null=True)),
                ('sucursal', models.ForeignKey(db_column='sucursal', on_delete=django.db.models.deletion.PROTECT, to='main.Sucursal')),
            ],
            options={
                'db_table': 'campana',
            },
        ),
        migrations.CreateModel(
            name='Canjetoken',
            fields=[
                ('usuario', models.ForeignKey(db_column='usuario', on_delete=django.db.models.deletion.PROTECT, primary_key=True, serialize=False, to='main.UsuarioFinal')),
                ('fecha', models.DateTimeField(blank=True, default=django.utils.timezone.now, editable=False)),
                ('token', models.ForeignKey(db_column='token', on_delete=django.db.models.deletion.PROTECT, to='main.Token')),
            ],
            options={
                'db_table': 'canjetoken',
                'unique_together': {('usuario', 'token')},
            },
        ),
        django_db_constraints.operations.AlterConstraints(
            name='Campana',
            db_constraints={'not_yesterday': "check (fechainicio >= CONCAT(CURDATE(), ' 00:00:00'))", 'not_zero_duration': 'check (duracion > 0)'},
        ),
        django_db_constraints.operations.AlterConstraints(
            name='Meta',
            db_constraints={'not_zero_tokens': 'check (tokens > 0)'},
        ),
    ]
